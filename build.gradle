plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'com.sun.xml.bind:jaxb-core'
	implementation 'com.sun.xml.bind:jaxb-impl'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	//테스트에서 lombok 사용하기 위해
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//바인딩을 위해
//	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	implementation 'com.google.code.gson:gson:2.9.0'  //GSON 라이브러리 추가. --> JSON 데이터를 자바 객체로 변환해줌
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt   JWT토큰을 위한 jjwt 라이브러리
//	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	// 쿼리문 실제로 볼 때 바인딩 되는 객체값 확인하기 위한 dependency
}

tasks.named('test') {
	useJUnitPlatform()
}
